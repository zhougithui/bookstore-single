<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.2.xsd">
	<!-- <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
        <property name="locateExistingServerIfPossible" value="true"/>
        <property name="agentId" value="MBeanServer_instance_agentId>"/>
	</bean> -->
	
	<!-- this bean must not be lazily initialized if the exporting is to happen -->
    <!-- <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">
        <property name="beans">
            <map>
                <entry key="bean:name=testBean1" value-ref="testBean"/>
            </map>
        </property>
        <property name="server" ref="mbeanServer"/>
        <property name="registrationBehaviorName" value="REGISTRATION_REPLACE_EXISTING"/>
        <property name="autodetect" value="true"/>
    </bean>
    
    <bean id="testBean" class="org.bear.bookstore.test.jmx.JmxTestBean">
        <property name="name" value="TEST"/>
        <property name="age" value="100"/>
    </bean> -->
    
    
    
    
    <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">
        <property name="assembler" ref="assembler"/>
        <property name="namingStrategy" ref="namingStrategy"/>
        <property name="autodetect" value="true"/>
        <property name="notificationListenerMappings">
			<map>
				<entry key="*">
					<bean class="org.bear.bookstore.test.jmx.ConfigNotificationListener" />
				</entry>
			</map>
		</property>
    </bean>

    <bean id="jmxAttributeSource"
            class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource"/>

    <bean id="assembler"
            class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
        <property name="attributeSource" ref="jmxAttributeSource"/>
    </bean>

    <bean id="namingStrategy"
            class="org.springframework.jmx.export.naming.MetadataNamingStrategy">
        <property name="attributeSource" ref="jmxAttributeSource"/>
    </bean>

    <bean id="testBean" class="org.bear.bookstore.test.jmx.AnnotationTestBean">
        <property name="name" value="TEST"/>
        <property name="age" value="100"/>
    </bean>
    
    
    <!-- <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">
        <property name="beans">
            <map>
                <entry key="bean:name=testBean5" value-ref="testBean"/>
            </map>
        </property>
        <property name="assembler">
            <bean class="org.springframework.jmx.export.assembler.InterfaceBasedMBeanInfoAssembler">
                <property name="managedInterfaces">
                    <value>org.bear.bookstore.test.jmx.IJmxTestBean</value>
                </property>
            </bean>
        </property>
    </bean> -->
    
    
    <!-- <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">
	    <property name="beans">
	        <map>
	            <entry key="bean:name=testBean5" value-ref="testBean"/>
	        </map>
	    </property>
	    <property name="assembler">
	        <bean class="org.springframework.jmx.export.assembler.MethodNameBasedMBeanInfoAssembler">
	            <property name="managedMethods">
	                <value>add,myOperation,getName,setName,getAge</value>
	            </property>
	        </bean>
	    </property>
	</bean>

    <bean id="testBean" class="org.bear.bookstore.test.jmx.JmxTestBean">
        <property name="name" value="TEST"/>
        <property name="age" value="100"/>
    </bean> -->
    
    
    
    <!-- 
    	Reading ObjectNames from Properties
     -->
    <!-- <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">
        <property name="beans">
            <map>
                <entry key="testBean" value-ref="testBean"/>
            </map>
        </property>
        <property name="namingStrategy" ref="namingStrategy"/>
    </bean>

    <bean id="testBean" class="org.springframework.jmx.JmxTestBean">
        <property name="name" value="TEST"/>
        <property name="age" value="100"/>
    </bean>

    <bean id="namingStrategy" class="org.springframework.jmx.export.naming.KeyNamingStrategy">
        <property name="mappings">
            <props>
                <prop key="testBean">bean:name=testBean1</prop>
            </props>
        </property>
        <property name="mappingLocations">
            <value>names1.properties,names2.properties</value>
        </property>
    </bean> -->
    
    
    <!-- 
    	@Configuration
		@EnableMBeanExport
		public class AppConfig {
		
		}
     -->
    <!-- <context:mbean-export/> -->
    
    <!-- 
    	@EnableMBeanExport(server="myMBeanServer", defaultDomain="myDomain")
		@Configuration
		ContextConfiguration {
		
		}
     -->
    <!-- <context:mbean-export server="myMBeanServer" default-domain="myDomain"/> -->
    
    
    
    
    <!-- 
    	JSR-160 Connectors  iiop  rmi
     -->
    <bean id="serverConnector"
        class="org.springframework.jmx.support.ConnectorServerFactoryBean">
	    <property name="objectName" value="connector:name=rmi"/>
	    <property name="serviceUrl"
	        value="service:jmx:rmi://localhost/jndi/rmi://localhost:1099/myconnector"/>
	    <property name="threaded" value="true"/>
	    <property name="daemon" value="true"/>
	    <property name="environment">
	        <map>
	            <entry key="someKey" value="someValue"/>
	        </map>
	    </property>
	</bean>
	
	<bean id="registry" class="org.springframework.remoting.rmi.RmiRegistryFactoryBean">
	    <property name="port" value="1099"/>
	</bean>
</beans>